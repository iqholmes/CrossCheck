{"ast":null,"code":"var _jsxFileName = \"/Users/ianholmes/code/final-project/client/src/components/results/results-view.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Link } from 'react-router-dom';\nimport { getResults } from '../../actions';\nimport './results.css';\nimport { getSecondsToTime } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResultsView = () => {\n  _s();\n\n  const data = useSelector(state => state.resultPostData.results); // const timeString = data?.results.map(results => ({time: getSecondsToTime(results?.time), athlete: results?.athlete}))\n\n  const {\n    workout\n  } = useSelector(state => state.workoutData);\n  const authenticated = useSelector(state => state.auth.authenticated);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getResults()); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getResults]);\n\n  function renderResults() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Workout Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderChart() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: workout && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", workout.type === 'time' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 700,\n            height: 400,\n            data: (data === null || data === void 0 ? void 0 : data.results) || [],\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"athlete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              tickFormatter: value => getSecondsToTime(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => getSecondsToTime(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"time\",\n              fill: \"#8C00FF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 56\n          }, this)\n        }, void 0, false), (workout === null || workout === void 0 ? void 0 : workout.type) === 'reps' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 700,\n            height: 400,\n            data: (data === null || data === void 0 ? void 0 : data.results) || [],\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"athlete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"reps\",\n              fill: \"#8C00FF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }, this)\n        }, void 0, false)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n\n  if (authenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderResults(), renderChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ResultsView, \"dzfaBMFWDejIC0zy8AVGn1yP0MU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ResultsView;\nexport default ResultsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsView\");","map":{"version":3,"sources":["/Users/ianholmes/code/final-project/client/src/components/results/results-view.js"],"names":["useEffect","useDispatch","useSelector","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Link","getResults","getSecondsToTime","ResultsView","data","state","resultPostData","results","workout","workoutData","authenticated","auth","dispatch","renderResults","renderChart","type","value"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Link } from 'react-router-dom';\nimport { getResults } from '../../actions';\nimport './results.css';\nimport { getSecondsToTime } from '../../utils';\n\nconst ResultsView = () => {\n  const data = useSelector((state) => state.resultPostData.results);\n  // const timeString = data?.results.map(results => ({time: getSecondsToTime(results?.time), athlete: results?.athlete}))\n  const { workout } = useSelector((state) => state.workoutData);\n  const authenticated = useSelector((state) => state.auth.authenticated);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getResults());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getResults])\n  \n  function renderResults() {\n    return (\n      <div>\n        <h1>Workout Results</h1>\n      </div>\n    )\n  }\n  function renderChart() {\n    return (\n      <>\n        {workout && (<> {workout.type === 'time' && (<><BarChart width={700} height={400} data={data?.results || []}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"athlete\" />\n          <YAxis tickFormatter={(value) => getSecondsToTime(value)}/>\n          <Tooltip formatter={(value) => getSecondsToTime(value)}/>\n          <Legend />\n          <Bar dataKey=\"time\" fill=\"#8C00FF\" />\n        </BarChart></>)}\n        {workout?.type === 'reps' && (<><BarChart width={700} height={400} data={data?.results || []}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"athlete\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"reps\" fill=\"#8C00FF\" />\n        </BarChart></>)}\n        </>)}\n      </>\n      )\n  }\n  if (authenticated) {\n  return (\n    <div>\n      {renderResults()}\n      {renderChart()}\n    </div>\n  )} else {\n    return (\n      <h1><Link to=\"/login\">Log in</Link> or <Link to =\"/signup\">sign up!</Link></h1>\n    )\n  }\n};\n\nexport default ResultsView;"]},"metadata":{},"sourceType":"module"}